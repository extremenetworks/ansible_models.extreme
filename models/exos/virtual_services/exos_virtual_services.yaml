---
GENERATOR_VERSION: '1.0'
ANSIBLE_METADATA: |
    {
        'metadata_version': '1.1',
        'status': ['preview'],
        'supported_by': 'community'
    }
NETWORK_OS: exos
RESOURCE: virtual_services
COPYRIGHT: Copyright 2019 Red Hat

DOCUMENTATION: |
  module: exos_virtual_services
  version_added: "2.10"
  short_description:  Manage virtual services on Extreme Networks EXOS devices.
  description: This module can be used to create new Virtual Services on Extreme Networks EXOS network devices, 
               manage operational state such as start, stop, suspend, resume, restart and reboot,
               update its components such as CPUs, memory, virtual ports, disks etc. and
               delete a virtual service with all its associated components.
  author: Jayalakshmi Viswanathan (@jayalakshmiV)
  notes:
    - Tested against EXOS 30.5
    - This module works with connection C(httpapi).
      See L(EXOS Platform Options,../network/user_guide/platform_exos.html)
  options:
    config:
      description: A dictionary of VM options
      type: list
      elements: dict
      suboptions:
        name:
          description:
            - Name of the virtual service
          type: str
        package:
          description:
            - Path of the package to be installed
          type: str
        num_cores:
          description:
            - Number of CPU cores assigned to the virtual services
          type: int
        memory_size:
          description:
            - Memory size in Megabytes assigned to the virtual services
          type: int
        disks:
          description:
            - Disks to be assigned to virtual service
          type: dict
          suboptions:
            name:
              description:
                - Name of the disk
              type: str
            size:
              description:
                - Size of the disk in Gigabytes
              type: int
        vports:
          description:
            - Virtual port to be used by the virtual service
          type: dict
          suboptions:
            name:
              description:
                - Name of the virtual port interface
              type: str
            port:
              description:
                - Port associated with the virtual port
              type: str
            vlans:
              description:
                - List of vlans to which the virtual port will be attached
              type: list
            connect_type:
              description:
                - Virtual port connect type
              type: str
        vnc_port:
          description:
            - VNC port number of the virtual service
          type: dict
          suboptions:
            enable_vnc:
              description:
                - Enable/disable VNC port access for the virtual services
              type: bool
            port_number:
              description:
                - VNC port number to be assigned to the Virtual service
              type: int
        enable:
          description:
            - Enable/disable the autostart of VM
          type: bool
        operational_state:
          description:
            - State the virtual service should be in
          type: str
          choices:
            - start
            - stop
            - restart
            - suspend
            - resume
    state:
      description:
      - The state the configuration should be left in
      type: str
      choices:
      - merged
      - replaced
      - overridden
      - deleted
      default: merged
EXAMPLES:
  - deleted_example_01.txt
  - merged_example_01.txt
  - overridden_example_01.txt
  - replaced_example_01.txt
